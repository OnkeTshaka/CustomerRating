@model ratings.Models.Article

@{
    ViewBag.Title = Model.Title;
    var comments = (IEnumerable<ratings.Models.ArticlesComment>)ViewBag.Comments;
    var ratingSum = ViewBag.RatingSum;
    var ratingCount = ViewBag.RatingCount;

    decimal rating = 0;
    if (ratingCount > 0)
    {
        rating = (ratingSum / ratingCount);
    }
    var totalRating = decimal.Parse(rating.ToString());
}
<h2>@Model.Title</h2>
<div>
    <span class="starFadeN" id="sRate1"></span><span class="starFadeN" id="sRate2"></span><span class="starFadeN" id="sRate3"></span><span class="starFadeN" id="sRate4"></span><span class="starFadeN" id="sRate5"></span>
</div>
<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Active)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Active)
        </dd>
    </dl>
</div>
@foreach (var c in comments)
{
    <hr />
    <div class="row">
        <div class="col-md-3">
            <i>@c.ThisDateTime</i>
            <br />
            @for (var i = 1; i <= c.Rating; i++)
            {
                <span class="starGlowN"></span>
            }
            @for (var i = (c.Rating + 1); i <= 5; i++)
            {
                <span class="starFadeN"></span>
            }
        </div>
        <div class="col-md-9">
            @Html.Raw(c.Comments.Replace("\n", "<br />"))

        </div>
    </div>
}
<hr />
@Html.Partial("_CommentBox")

<div class="page product-reviews-page">
    <div class="page-title">
        <h1 class="h3 d-flex align-items-baseline">
            <span class="pr-2">@("Reviews.ProductReviewsFor")</span>
            <small @Model.Title)>
                <a href="" style="text-decoration: none;">@Model.Title</a>
            </small>
        </h1>
    </div>

    <div class="page-body">
        @*@{ Html.RenderWidget("productreviews_page_top"); }*@

        @if (Model.Title != "")
        {
            <div class="alert alert-success">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                @Model.Title
            </div>}
        else
        {
            if (!ViewData.ModelState.IsValid)
            {
                @Html.ValidationSummary("", new { @class = "alert alert-danger m-b-0" })
            }
            <div class="write-review mb-4" id="review-form">
                <h4 class="d-none">@("Reviews.Overview.AddNew")</h4>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Title, new { @class = "form-control-label col-form-label col-md-3" })
                        <div class="col-md-9 star-rating-parent">
                            <div class="review-rating star-rating star-rating-large">
                                @{
                                    var srName = Html.EditorFor(x => x.Title);
                                }
                                <input type="radio" id="@(srName)5" name="@srName" value="5" checked="@(5 == Model.AutoId)" /><label for="@(srName)5" class="tooltip-toggle" title="@("Reviews.Fields.Rating.Excellent")"></label>
                                <input type="radio" id="@(srName)4" name="@srName" value="4" checked="@(4 == Model.AutoId)" /><label for="@(srName)4"></label>
                                <input type="radio" id="@(srName)3" name="@srName" value="3" checked="@(3 == Model.AutoId)" /><label for="@(srName)3"></label>
                                <input type="radio" id="@(srName)2" name="@srName" value="2" checked="@(2 == Model.AutoId)" /><label for="@(srName)2"></label>
                                <input type="radio" id="@(srName)1" name="@srName" value="1" checked="@(1 == Model.AutoId)" /><label for="@(srName)1" class="tooltip-toggle" title="@("Reviews.Fields.Rating.Bad")"></label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Title, new { @class = "form-control-label col-form-label col-md-3 required" })
                        <div class="col-md-9">
                          @*k  @Html.TextBoxFor(model => model.Title, Model.CanCurrentCustomerLeaveReview ? (object)(new { @class = "form-control" }) : (object)(new { @class = "form-control", disabled = "disabled" }))*@
                            @Html.ValidationMessageFor(model => model.Title, null)
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Description, new { @class = "form-control-label col-form-label col-md-3 required" })
                        <div class="col-md-9">
                           @* @Html.TextAreaFor(model => model.ReviewText, 4, 1, Model.CanCurrentCustomerLeaveReview ? (object)(new { @class = "form-control" }) : (object)(new { @class = "form-control", disabled = "disabled" }))*@
                            @Html.ValidationMessageFor(model => model.Title, null)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col col-sm-auto offset-sm-3 text-muted">
                            @("Common.FormFields.Required.Hint")
                        </div>
                    </div>

                    <div class="row justify-content-end">
                        <div class="col-sm-9">
                            @*@{ Html.RenderWidget("gdpr_consent"); }*@
                        </div>
                    </div>

                                @*if (Model.DisplayCaptcha)
                                {
                                    <div class="captcha-box form-group row justify-content-end">
                                        <div class="col-md-9">
                                            @Html.Raw(Html.GenerateCaptcha())
                                        </div>
                                    </div>
                                }*@

                                <div class="form-group row m-b-0 justify-content-end">
                                    <div class="col-md-9">
                                        <button type="submit" name="add-review" value="add-review" class="btn btn-primary write-product-review-button">
                                            <span>@("Reviews.SubmitButton")</span>
                                        </button>
                                    </div>
                                </div>
                                }
            </div>
                                }

        @*@if (Model.Items.Count > 0)
        {
            <div class="block">
                <div class="block-title">
                    <h3 class="d-flex align-items-center">
                        <span>@T("Reviews.ExistingReviews")</span>
                        <small class="text-muted pl-2 lrm">(@Model.Items.Count)</small>
                    </h3>
                </div>
                <div class="block-body pt-3">
                    @{ Html.RenderPartial("Product.Reviews", Model); }
                </div>
            </div>
                        }*@

        @*@{ Html.RenderWidget("productreviews_page_bottom"); }*@

    </div>
</div>
    @section Scripts {
        <script>
            function SCRate() {
                for (var i = 1; i <= @totalRating; i++) {
                    $("#sRate" + i).attr('class', 'starGlowN');
                }
            }
            $(function(){
                SCRate();
            });
        </script>
    }
